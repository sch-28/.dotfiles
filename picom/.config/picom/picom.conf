transition-length = 300
transition-pow-x = 0.1
transition-pow-y = 0.1
transition-pow-w = 0.1
transition-pow-h = 0.1
size-transition = true

#################################
#            Shadows            #
#################################
# Enables client-side shadows on windows.
# Default: false
shadow = true;

# Blur radius for shadows, in pixels.
# Default: 12
shadow-radius = 14;

# Horizontal offset for shadows, in pixels.
# Default: -15
shadow-offset-x = -7;

# Vertical offset for shadows, in pixels.
# Default: -15
shadow-offset-y = -7;

# Example if you want custom shadow opacity:
shadow-opacity = 0.5

#################################
#             Fading            #
#################################
# Fade windows in/out on open/close and opacity changes.
# Default: false
fading = true;

# Opacity increase per step while fading in.
# Range: 0.01 - 1.0, default: 0.028
fade-in-step = 0.03;

# Opacity decrease per step while fading out.
# Range: 0.01 - 1.0, default: 0.03
fade-out-step = 0.03;

# If needed, time between fade steps in ms (default 10):
# fade-delta = 10


#################################
#   Transparency / Opacity      #
#################################
# Opacity of window titlebars/borders, range 0.1 - 1.0
# Default: 1.0
frame-opacity = 0.7;


#################################
#           Corners             #
#################################
# Radius for rounded corners, default 0 (disabled)
corner-radius = 0;


#################################
#            Blur               #
#################################
# Kernel for background blur if used. e.g., "3x3box"
blur-kern = "3x3box";
blur-background = true;
blur-method = "dual_kawase";
blur-strength = 5;


#################################
#       General Settings        #
#################################
# Backend: "xrender", "glx", or "egl".
# Default: "xrender"
# backend = "glx";
backend = "xrender";

# Use higher-precision rendering and dithering. 
# Reduces banding, might cost performance. Only for GLX/EGL.
dithered-present = false;

# Enable VSync.
# Default: false
vsync = true;

# Attempt to detect windows with rounded corners.
# Default: false
detect-rounded-corners = true;

# Detect _NET_WM_WINDOW_OPACITY on client windows.
# Default: false
detect-client-opacity = true;

# Use WM_TRANSIENT_FOR to group windows for focus.
# Default: false
detect-transient = true;

# Redraw only changed parts of the screen (improves performance).
# Default: false
use-damage = true;


#################################
#           Animations          #
#################################
animations = (
  {
    triggers = ["close", "hide"];
    preset = "disappear";
    duration = 0.16;
    scale = 1.0;
  },
  {
    triggers = ["open", "show"];
    preset = "appear";
    duration = 0.16;
    scale = 0.98;
  }
);


#################################
#       Rule-based Options      #
#################################
# 'rules' can be specified as rules: (...) or rules = (...), 
# depending on your picom version.

rules: ( 
  ##########################################
  # Basic examples from your config
  ##########################################
  {
    match = "window_type = 'tooltip'";
    fade = false;
    shadow = true;
    opacity = 0.75;
    full-shadow = false;
  },
  {
    match = "window_type = 'dock' || "
            "window_type = 'desktop' || "
            "_GTK_FRAME_EXTENTS@";
    blur-background = false;
    blur-background-exclude = true;
  },
  {
    match = "window_type != 'dock'";
    # Example: if you want a custom shader, uncomment:
    # shader = "my_shader.frag";
  },
  {
    match = "window_type = 'dock' || window_type = 'desktop'";
    corner-radius = 0;
  },

  ##########################################
  #  Original shadow-exclude / fade-exclude / opacity-rule expansions
  #  Each match that sets shadow=false is effectively "shadow-exclude".
  #  If needed, fade=false is also "fade-exclude".
  ##########################################
  {
    match = "! name~=''";
    shadow = false;
  },
  {
    match = "name = 'Notification'";
    shadow = false;
  },
  {
    match = "name = 'Plank'";
    shadow = false;
  },
  {
    match = "name = 'Docky'";
    shadow = false;
  },
  {
    match = "name = 'Kupfer'";
    shadow = false;
  },
  {
    match = "name = 'xfce4-notifyd'";
    shadow = false;
  },
  {
    match = "name = 'cpt_frame_window'";
    shadow = false;
  },
  {
    match = "name *= 'VLC'";
    shadow = false;
  },
  {
    match = "name *= 'compton'";
    shadow = false;
  },
  {
    match = "name *= 'picom'";
    shadow = false;
  },
  {
    match = "name *= 'Chromium'";
    shadow = false;
  },
  {
    match = "name *= 'Chrome'";
    shadow = false;
  },
  {
    match = "name *= 'conky'";
    shadow = false;
  },
  {
    match = "class_g = 'Conky'";
    shadow = false;
    fade = false;  # also disable fading for Conky
  },
  {
    match = "class_g = 'Kupfer'";
    shadow = false;
  },
  {
    match = "class_g = 'Synapse'";
    shadow = false;
  },
  {
    match = "class_g ?= 'Notify-osd'";
    shadow = false;
  },
  {
    match = "class_g ?= 'Cairo-dock'";
    shadow = false;
  },
  {
    match = "class_g ?= 'Xfce4-notifyd'";
    shadow = false;
  },
  {
    match = "class_g ?= 'Xfce4-power-manager'";
    shadow = false;
  },
  {
    match = "class_g ?= 'ulauncher'";
    shadow = false;
  },
  {
    match = "class_g ?= 'rofi'";
    shadow = false;
  },
  # Opacity rules
  {
    match = "class_g = 'copyq'";
    opacity = 0.80;
  },
  {
    match = "name = 'alttab'";
    opacity = 0.90;
  },
  # Additional
  {
    match = "window_type *= 'menu'";
    shadow = false;
  },
  {
    match = "name *?= 'firefox'";
    shadow = false;
  },
{
    match = "class_g != 'kitty'";
    opacity = 1.0;
  },
  {
    match = "class_g *?= 'conky'";
    shadow = false;
  },
  {
    match = "window_type = 'desktop'";
    shadow = false;
  },

  ##########################################
  #  Geometry animation rule
  ##########################################
  # {
  #   match = "MANUAL@ != 1";
  #   animations = ({
  #     triggers = ["geometry"];
  #     preset = "geometry-change";
  #     duration = 0.16;
  #   });
  # }

    {
   match = "class_g = 'kitty'";

    opacity = 0.95;


    animations = (
    {
    triggers = ["close", "hide"];
    opacity = {
      curve = "linear";
      duration = 0.1;
      start = "window-raw-opacity-before";
      end = 0;
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
  },
  {
    triggers = ["geometry"]
    scale-x = {
      curve = "cubic-bezier(0,0,0,1)";
      duration = 0.25;
      start = "window-width-before / window-width";
      end = 1;
    }
    scale-y = {
      curve = "cubic-bezier(0,0,0,1)";
      duration = 0.25;
      start = "window-height-before / window-height";
      end = 1;
    }
    offset-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.25;
      start = "window-x-before - window-x";
      end = 0;
    }
    offset-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.25;
      start = "window-y-before - window-y";
      end = 0;
    }

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }
)

    }
)
